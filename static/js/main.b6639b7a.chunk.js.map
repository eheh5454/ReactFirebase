{"version":3,"sources":["myBase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","console","log","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","data","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginLeft","flexDirection","alignItems","fontSize","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","autoFocus","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","from","App","init","setInit","userObject","setUserObject","onAuthStateChanged","user","args","currentUser","Object","assign","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6639b7a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/firebase-storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n//auth만 익스포트한다\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService } from \"myBase\";\r\nimport React, {useState} from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    // 발생한 이벤트에서 name, value를 가져온다.\r\n    // 그 후, 그 값을 이용해 무언가 처리를 함(이메일, 패스워드 설정)\r\n    const onChange = (event) => {\r\n        const {target: {name,value}}=event;\r\n        console.log(value);\r\n        if(name === \"email\"){\r\n            setEmail(value)\r\n        } else if(name===\"password\") {\r\n            setPassword(value)\r\n        }           \r\n      \r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if(newAccount){\r\n                // create account \r\n                const data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                // log in\r\n                const data = await authService.signInWithEmailAndPassword(email,password);\r\n            }\r\n            console.log(data);\r\n        } catch(error) {\r\n            setError(error.message);\r\n        }                \r\n    };\r\n    // 로그인 <-> 회원가입 전환 \r\n    const toggleAccount = () => setNewAccount((prev)=>!prev);\r\n    return (\r\n    <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n            <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />            \r\n            <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\" /> \r\n            <input type=\"submit\" value={newAccount? \"Create Account\": \"Sign In\"} className=\"authInput authSubmit\" />      \r\n            {error && <span className=\"authError\">{error}</span>}   \r\n        </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\">{newAccount? \"Sign in\":\"Create Account\"}</span>\r\n    </>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"myBase\";\r\nimport React from \"react\";\r\n\r\nconst Auth = () => {   \r\n\r\n    // 소셜 로그인 기능 \r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: {name}, \r\n        } = event;\r\n        let provider;\r\n        // name으로 구분하여 구글, 깃허브 로그인 진행 \r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"gitHub\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        // 팝업 방식으로 로그인\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    }\r\n    return (\r\n    <div>      \r\n        <AuthForm />\r\n        <div>\r\n            <button name=\"google\" onClick={onSocialClick}>Continue with Google</button>\r\n            <button name=\"gitHub\" onClick={onSocialClick}>Continue with Github</button>\r\n            <button>Continue with Email</button>\r\n        </div>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"myBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n// 오너일 경우에만 표시 \r\nconst Nweet = ({nweetObj, isOwner}) => {     \r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    // 삭제할건지 여부를 묻는 윈도우를 띄운 후에 삭제 \r\n    const onDeleteClick = async() => {\r\n        const ok = window.confirm(\"Are you sure you to delete this nweet?\");\r\n        console.log(ok);\r\n        if (ok) {\r\n            // delete nweet \r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    }\r\n    // 편집 상태 변경 \r\n    const toggleEditing = () => setEditing((prev)=>!prev);    \r\n    // 제출, 디비에 편집이 끝난 nweet를 제출함 \r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(nweetObj, newNweet);\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({text: newNweet,});\r\n        setEditing(false);\r\n    }\r\n    // 인풋의 입력에 따라 현재 nweet를 갱신함 \r\n    const onChange = (event) => {\r\n        const {target:{value},\r\n        } = event;\r\n        setNewNweet(value);\r\n    }\r\n\r\n    // editing 상태에 따라 편집 화면 <-> 편집, 삭제 선택 전환 \r\n    return (\r\n        <div className=\"nweet\">\r\n            {\r\n                editing ? (\r\n                // 편집 상태 \r\n                <>\r\n                    {isOwner && (\r\n                        <>\r\n                        <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input type=\"text\" placeholder=\"Edit your Nweet\" value={newNweet} required onChange={onChange} />\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                        </form>\r\n                        <span onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</span>\r\n                        </>\r\n                    )}\r\n                    \r\n                </>\r\n                ) : (\r\n                // 삭제, 편집 선택 \r\n                <>\r\n                    <h4>{nweetObj.text}</h4>   \r\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                    {isOwner && (\r\n                        <>\r\n                            <div className=\"nweet__actions\">\r\n                            <button onClick={onDeleteClick}>Delete Nweet</button>\r\n                            <button onClick={toggleEditing}>Edit Nweet</button>\r\n                            </div>\r\n                        </> \r\n                    )}\r\n                </>\r\n                )\r\n            }\r\n            \r\n            \r\n        </div>\r\n    );    \r\n};\r\n\r\nexport default Nweet;","import React, {useState}  from \"react\";\r\nimport { dbService, storageService } from \"myBase\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nconst NweetFactory = ({userObj}) =>{\r\n    const [nweet, setNweet] = useState(\"\");\r\n    \r\n    const [attachment,setAttachment] = useState(\"\");\r\n\r\n    // DB 콜렉션에 제출한 내용을 넣어준다.\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n          return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl =\"\";\r\n        if(attachment !== \"\"){\r\n          const fileRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n          const response = await fileRef.putString(attachment, \"data_url\");\r\n          attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        \r\n        const nweetObj = { \r\n          text: nweet,\r\n          createdAt: Date.now(),\r\n          creatorId: userObj.uid,\r\n          attachmentUrl,\r\n        }\r\n        await dbService.collection(\"nweets\").add(nweetObj);       \r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const OnChange = (event) => {\r\n        const {target:{value}} = event; \r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n      const {target:{files}} = event;\r\n      const theFile = files[0];      \r\n      const reader = new FileReader()\r\n      reader.onloadend = (finishedEvent) => {\r\n        console.log(finishedEvent);\r\n        const {currentTarget: {result}} = finishedEvent;\r\n        setAttachment(result);\r\n      }\r\n      reader.readAsDataURL(theFile);      \r\n    }\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n         <div className=\"factoryInput__container\">\r\n          <input\r\n            className=\"factoryInput__input\"\r\n            value={nweet}\r\n            onChange={OnChange}\r\n            type=\"text\"\r\n            placeholder=\"What's on your mind?\"\r\n            maxLength={120}\r\n          />\r\n          <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n        </div>\r\n        <label for=\"attach-file\" className=\"factoryInput__label\">\r\n          <span>Add photos</span>          \r\n        </label>        \r\n        <input id=\"attach-file\" type=\"file\" accept=\"image/*\" onChange={onFileChange} style={{opacity: 0,}} />\r\n        {attachment && (\r\n          <div className=\"factoryForm__attachment\">  \r\n            <img src={attachment}  style={{\r\n              backgroundImage: attachment,\r\n            }} />\r\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default NweetFactory;","import { dbService } from \"myBase\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n  const [nweets, setNweets] = useState([]);        \r\n    useEffect( () => {     \r\n      console.log(\"use Effect\");\r\n      // onSanpshot: nweets 콜렉션에 무슨 일이 생길때마다 업데이트 되는 콜백 함수(리얼타임)\r\n      // db에서 정보를 가져와 nweets에 저장한다.\r\n      // ...을 쓰면 prev의 모든 데이터를 document.data()로 대체하겠다는 뜻 \r\n      dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n        const nweetArray = snapshot.docs.map(doc => ({id:doc.id, ...doc.data(),}));      \r\n        setNweets(nweetArray);\r\n      });\r\n    }, []);    \r\n    return (\r\n        <div className=\"container\">         \r\n          <NweetFactory userObj={userObj} />\r\n          <div style={{ marginTop: 30 }}>\r\n            {nweets.map((nweet) => (\r\n              <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ); \r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Navigation = ({userObj}) => (\r\n<nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n            <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>            \r\n            <Link\r\n            to=\"/profile\"\r\n            style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n            }}\r\n            ></Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n)\r\nexport default Navigation;","import { authService } from \"myBase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport default ({refreshUser, userObj}) => {\r\n    const history = useHistory();    \r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);  \r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n    const onLogOutClick = () => {\r\n        authService.signOut();      \r\n        history.push(\"/\");        \r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();        \r\n        if (userObj.displayName !== newDisplayName)\r\n        { \r\n            await userObj.updateProfile({displayName: newDisplayName,});\r\n            console.log(\"Update\");\r\n        }\r\n        refreshUser();\r\n    };\r\n\r\n    return (\r\n \r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input onChange={onChange} type=\"text\" autoFocus placeholder=\"Display name\" value={newDisplayName} className=\"formInput\" />\r\n        <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" style={{ marginTop: 10, }} />    \r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n    );\r\n};","import React, { useState } from \"react\";\r\nimport {HashRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => { \r\n    // Switch는 첫번쨰 매치되는 path를 렌더링함\r\n    // Redirect: \"/\" 외의 라우트로 가게되면 \"/\" 라우트로 돌아오라는 뜻\r\nreturn (\r\n    <Router>       \r\n        {isLoggedIn && <Navigation userObj={userObj} />}  \r\n        <Switch>\r\n            {isLoggedIn? (                            \r\n            <div\r\n              style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              }}\r\n            >\r\n            <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>        \r\n            <Redirect from=\"*\" to=\"/\" />\r\n            </div>            \r\n            ) : (\r\n            <>\r\n            <Route exact path=\"/\">\r\n                <Auth />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n            </>\r\n            )}\r\n        </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;","import React, {useEffect, useState} from 'react';\r\nimport AppRouter from \"components/Router\";\r\nimport {authService} from \"myBase\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  // 유저 담는 변수 \r\n  const [userObject,setUserObject] = useState(null);\r\n  // useEffect - componentDid, componentWill 시리즈가 합쳐진 것 \r\n  useEffect(()=>{\r\n    authService.onAuthStateChanged((user)=>{\r\n        if(user) {\r\n          setUserObject({\r\n            displayName: user.displayName,\r\n            uid: user.uid,\r\n            updateProfile: (args) => user.updateProfile(args),\r\n          });             \r\n        } else {\r\n          setUserObject(null);\r\n        }\r\n      setInit(true);      \r\n    });\r\n    }, []);\r\n    const refreshUser = () => {\r\n      const user = authService.currentUser;      \r\n      setUserObject(Object.assign({},user));     \r\n    };\r\n    // footer를 쓰면 라우트 이외에 추가로 더 넣을 수 있음\r\n    // user Login을 Boolean함수로 체크함 \r\n    return (\r\n      <>\r\n      {init? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObject)} userObj={userObject} /> : \"Initializing....\"}\r\n      </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport \"./styles.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}